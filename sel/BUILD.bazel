load("@rules_cc//cc:cc_library.bzl", "cc_library")

package(default_visibility = [":__subpackages__"])

cc_library(
    name = "constant",
    hdrs = ["constant.hpp"],
    deps = [
        ":contract",
        ":strongly_ordered",
        ":term",
    ],
)

cc_library(
    name = "contract",
    hdrs = ["contract.hpp"],
)

cc_library(
    name = "multiplies",
    hdrs = ["multiplies.hpp"],
    deps = [
        ":operation",
        ":term",
        ":term_promotable",
        "//sel/detail:infix_operation_formatter",
        "//sel/detail:is_specialization_of",
    ],
)

cc_library(
    name = "leaf",
    hdrs = ["leaf.hpp"],
    deps = [":strongly_ordered"],
)

cc_library(
    name = "operation",
    hdrs = ["operation.hpp"],
    deps = [":strongly_ordered"],
)

cc_library(
    name = "plus",
    hdrs = ["plus.hpp"],
    deps = [
        ":operation",
        ":term",
        ":term_promotable",
        "//sel/detail:infix_operation_formatter",
        "//sel/detail:is_specialization_of",
    ],
)

cc_library(
    name = "strongly_ordered",
    hdrs = ["strongly_ordered.hpp"],
)

cc_library(
    name = "term",
    hdrs = ["term.hpp"],
    deps = [
        ":leaf",
        ":operation",
    ],
)

cc_library(
    name = "term_promotable",
    hdrs = ["term_promotable.hpp"],
    deps = [
        ":constant",
        ":term",
    ],
)

cc_library(
    name = "tree",
    hdrs = ["tree.hpp"],
    deps = [
        ":constant",
        ":leaf",
        ":multiplies",
        ":operation",
        ":plus",
        ":variable",
        "//sel/detail:tuple_ref",
        "//sel/detail:tuple_transform_reduce",
    ],
)

cc_library(
    name = "variable",
    hdrs = ["variable.hpp"],
    deps = [
        ":contract",
        ":term",
    ],
)

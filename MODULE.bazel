bazel_dep(name = "rules_cc", version = "0.1.1")

bazel_dep(
    name = "toolchains_llvm",
    version = "",
    dev_dependency = True,
)
bazel_dep(
    name = "bazel_clang_format",
    version = "",
    dev_dependency = True,
)
bazel_dep(
    name = "rules_clang_tidy",
    version = "",
    dev_dependency = True,
)
bazel_dep(
    name = "buildifier_prebuilt",
    version = "8.2.0.2",
    dev_dependency = True,
)
bazel_dep(
    name = "rules_multirun",
    version = "0.12.0",
    dev_dependency = True,
)
bazel_dep(
    name = "rules_shell",
    version = "0.4.1",
    dev_dependency = True,
)
bazel_dep(
    name = "skytest",
    version = "",
    dev_dependency = True,
)

TOOLCHAINS_LLVM_COMMIT = "f1048a300d0be607c7f5092e323bc15b7ef8d8af"

archive_override(
    module_name = "toolchains_llvm",
    integrity = "sha256-g9hKi+nAtM1ddbK9Ppkrx8LyY7K/Op3vSwopp2Kh85Y=",
    strip_prefix = "toolchains_llvm-{commit}".format(
        commit = TOOLCHAINS_LLVM_COMMIT,
    ),
    urls = ["https://github.com/bazel-contrib/toolchains_llvm/archive/{commit}.tar.gz".format(
        commit = TOOLCHAINS_LLVM_COMMIT,
    )],
)

CXX_STANDARD = ["-std=c++26"]

COMMON_CXX_WARNINGS = [
    "-Werror",
    "-Wall",
    "-Wextra",
    "-Wpedantic",
    "-Wconversion",
    "-Wnon-virtual-dtor",
    "-Wold-style-cast",
    "-Wcast-align",
    "-Wunused",
    "-Woverloaded-virtual",
    "-Wmisleading-indentation",
    "-Wnull-dereference",
    "-Wdouble-promotion",
    "-Wformat=2",
    "-Wimplicit-fallthrough",
    "-Wdocumentation-unknown-command",
    "-Wextra-semi",
    "-Wunreachable-code",
    "-Wunreachable-code-return",
]

llvm = use_extension("@toolchains_llvm//toolchain/extensions:llvm.bzl", "llvm", dev_dependency = True)
llvm.toolchain(
    cxx_flags = {
        "": [
            "-D_LIBCPP_HARDENING_MODE=_LIBCPP_HARDENING_MODE_EXTENSIVE",
            "-stdlib=libc++",
            "-Wshadow",
        ] + COMMON_CXX_WARNINGS + CXX_STANDARD,
    },
    llvm_version = "20.1.4",
)
use_repo(llvm, "llvm_toolchain")

register_toolchains("@llvm_toolchain//:all")

BAZEL_CLANG_FORMAT_COMMIT = "1fd2a042798ede8d6f5498ea92287bc1204260fa"

archive_override(
    module_name = "bazel_clang_format",
    integrity = "sha256-wcS8GuHvn57FgtMHGLVlBZB+pZ4ojkploCzlwU+ZDFc=",
    strip_prefix = "bazel_clang_format-{commit}".format(
        commit = BAZEL_CLANG_FORMAT_COMMIT,
    ),
    urls = [
        "https://github.com/oliverlee/bazel_clang_format/archive/{commit}.tar.gz".format(commit = BAZEL_CLANG_FORMAT_COMMIT),
    ],
)

RULES_CLANG_TIDY_COMMIT = "d50f5bd1d8e861c39ad8313645b755e300e52b58"

archive_override(
    module_name = "rules_clang_tidy",
    integrity = "sha256-U8klhJSImGCCZ9nT3OxPlPzbqDCfxDcUcUoLKYWQkxQ=",
    strip_prefix = "rules_clang_tidy-{commit}".format(
        commit = RULES_CLANG_TIDY_COMMIT,
    ),
    urls = ["https://github.com/oliverlee/rules_clang_tidy/archive/{commit}.tar.gz".format(
        commit = RULES_CLANG_TIDY_COMMIT,
    )],
)

SKYTEST_COMMIT = "6c0848990cc3a9e0a9b9749e0a5244ce0b96279a"

archive_override(
    module_name = "skytest",
    integrity = "sha256-zy776i844vVBkq4lyGU+cg9H1+Q84kTCzrj+VWHWJds=",
    strip_prefix = "skytest-{commit}".format(
        commit = SKYTEST_COMMIT,
    ),
    urls = ["https://github.com/oliverlee/skytest/archive/{commit}.tar.gz".format(
        commit = SKYTEST_COMMIT,
    )],
)
